#pragma once

#include <iostream>
#include <algorithm>

#include "Sorting_dataStructure/Sorting_dataStructure.h"

namespace mm {

	//=======================+===========+
	//                       | std::sort |
	//=======================+===========+

	void StlSort_1(DataSet& obj);

	void StlStableSort_1(DataSet& obj);

	void StlHeapSort_1(DataSet& obj);




	//TODO:

	//=======================+==================+
	//                       | Block Merge Sort |
	//=======================+==================+

	//=======================+==========+
	//                       | Tim Sort |
	//=======================+==========+

	//=======================+==========+
	//                       | Comb Sort |
	//=======================+==========+

	//=======================+==========+
	//                       | Bitonic Sort |
	//=======================+==========+

	//=======================+==========+
	//                       | Cocktail Shaker Sort |
	//=======================+==========+

	//=======================+==========+
	//                       | Gnome Sort |
	//=======================+==========+

	//=======================+==========+
	//                       | Cycle Sort |
	//=======================+==========+

	//=======================+==========+
	//                       | Odd-event Sort |
	//=======================+==========+

	//=======================+==========+
	//                       | Spaghetti Sort |
	//=======================+==========+

	//=======================+==========+
	//                       | Batcher's Sort |
	//=======================+==========+


	// Tim Sort - Trial Version 1
	//=======================================================================================



	//External Sorting - http://www.geeksforgeeks.org/external-sorting/
}